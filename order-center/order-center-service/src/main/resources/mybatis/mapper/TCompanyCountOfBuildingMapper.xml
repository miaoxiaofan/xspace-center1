<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xspace.ordercenter.dao.TCompanyCountOfBuildingMapper">
  <resultMap id="BaseResultMap" type="com.xspace.ordercenter.entity.TCompanyCountOfBuilding">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="park_code" jdbcType="INTEGER" property="parkCode" />
    <result column="park_name" jdbcType="VARCHAR" property="parkName" />
    <result column="build_code" jdbcType="INTEGER" property="buildCode" />
    <result column="build_name" jdbcType="VARCHAR" property="buildName" />
    <result column="industry_type_code" jdbcType="TINYINT" property="industryTypeCode" />
    <result column="industry_type_name" jdbcType="VARCHAR" property="industryTypeName" />
    <result column="company_num" jdbcType="INTEGER" property="companyNum" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_company_count_of_building
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xspace.ordercenter.entity.TCompanyCountOfBuilding">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_company_count_of_building (id, park_code, park_name, 
      build_code, build_name, industry_type_code, 
      industry_type_name, company_num)
    values (#{id,jdbcType=INTEGER}, #{parkCode,jdbcType=INTEGER}, #{parkName,jdbcType=VARCHAR}, 
      #{buildCode,jdbcType=INTEGER}, #{buildName,jdbcType=VARCHAR}, #{industryTypeCode,jdbcType=TINYINT}, 
      #{industryTypeName,jdbcType=VARCHAR}, #{companyNum,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xspace.ordercenter.entity.TCompanyCountOfBuilding">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_company_count_of_building
    set park_code = #{parkCode,jdbcType=INTEGER},
      park_name = #{parkName,jdbcType=VARCHAR},
      build_code = #{buildCode,jdbcType=INTEGER},
      build_name = #{buildName,jdbcType=VARCHAR},
      industry_type_code = #{industryTypeCode,jdbcType=TINYINT},
      industry_type_name = #{industryTypeName,jdbcType=VARCHAR},
      company_num = #{companyNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, park_code, park_name, build_code, build_name, industry_type_code, industry_type_name, 
    company_num
    from t_company_count_of_building
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, park_code, park_name, build_code, build_name, industry_type_code, industry_type_name, 
    company_num
    from t_company_count_of_building
  </select>


  <select id="parkIndustryList" resultType="com.xspace.ordercenter.rsp.ParkIndustryPercentageRsp" parameterType="java.lang.String">
    select  industry_type_code  as industry_code,industry_type_name as industry_name ,sum(company_num ) as company_num  from t_company_count_of_building
    where park_code=#{searchCode,jdbcType=INTEGER}
    group  by  industry_type_code
    order by  company_num desc
  </select>

  <select id="buildIndustryList" resultType="com.xspace.ordercenter.rsp.ParkIndustryPercentageRsp" >
    select  industry_type_code  as industry_code,industry_type_name as industry_name ,sum(company_num ) as company_num  from t_company_count_of_building
    where park_code=#{parkCode,jdbcType=INTEGER}
    and build_code =#{buildCode,jdbcType=INTEGER}
    group  by  industry_type_code
    order by  company_num desc
  </select>

  <select id="selectCompanyCountOfBuildingByData" resultMap="BaseResultMap">
    SELECT
    t.park_code,
    t.park_name,
    t.building_code    build_code,
    t.building_name    build_name,
    tit.parent_code    industry_type_code,
    titt.name industry_type_name,
    COUNT(t.code)      company_num
    FROM t_company t
    LEFT JOIN t_industry_type tit
    ON t.industry_type_code = tit.code  AND tit.level=2
    LEFT JOIN t_industry_type titt
    ON tit.parent_code = titt.code  AND titt.level=1
    GROUP BY t.building_code,tit.parent_code
  </select>


</mapper>