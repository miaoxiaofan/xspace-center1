<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xspace.ordercenter.dao.TCompanyMapper">
  <resultMap id="BaseResultMap" type="com.xspace.ordercenter.entity.TCompany">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="INTEGER" property="code" />
    <result column="park_code" jdbcType="INTEGER" property="parkCode" />
    <result column="park_name" jdbcType="VARCHAR" property="parkName" />
    <result column="building_code" jdbcType="INTEGER" property="buildingCode" />
    <result column="building_name" jdbcType="VARCHAR" property="buildingName" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="corporation" jdbcType="VARCHAR" property="corporation" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="registered_capital" jdbcType="INTEGER" property="registeredCapital" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="business_scope" jdbcType="VARCHAR" property="businessScope" />
    <result column="intended_business_code" jdbcType="TINYINT" property="intendedBusinessCode" />
    <result column="industry_type_code" jdbcType="TINYINT" property="industryTypeCode" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xspace.ordercenter.entity.TCompany">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_company (id, code, park_code, 
      park_name, building_code, building_name, 
      company_name, corporation, create_date, 
      registered_capital, address, phone_number, 
      longitude, latitude, business_scope, 
      intended_business_code, industry_type_code)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=INTEGER}, #{parkCode,jdbcType=INTEGER}, 
      #{parkName,jdbcType=VARCHAR}, #{buildingCode,jdbcType=INTEGER}, #{buildingName,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR}, #{corporation,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{registeredCapital,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, #{businessScope,jdbcType=VARCHAR}, 
      #{intendedBusinessCode,jdbcType=TINYINT}, #{industryTypeCode,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xspace.ordercenter.entity.TCompany">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_company
    set code = #{code,jdbcType=INTEGER},
      park_code = #{parkCode,jdbcType=INTEGER},
      park_name = #{parkName,jdbcType=VARCHAR},
      building_code = #{buildingCode,jdbcType=INTEGER},
      building_name = #{buildingName,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      corporation = #{corporation,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      registered_capital = #{registeredCapital,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      business_scope = #{businessScope,jdbcType=VARCHAR},
      intended_business_code = #{intendedBusinessCode,jdbcType=TINYINT},
      industry_type_code = #{industryTypeCode,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, code, park_code, park_name, building_code, building_name, company_name, 
    corporation, create_date, registered_capital, address, phone_number, longitude, latitude, 
    business_scope, intended_business_code, industry_type_code
    from t_company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, code, park_code, park_name, building_code, building_name, company_name, 
    corporation, create_date, registered_capital, address, phone_number, longitude, latitude, 
    business_scope, intended_business_code, industry_type_code
    from t_company
  </select>

  <select id="companyList" resultType="com.xspace.ordercenter.rsp.CompanyInfoRsp" >
    select a.id, a.code, a.park_code, a.park_name, a.building_code, a.building_name, a.company_name,
    a.corporation,  a.create_date, a.registered_capital, a.address, a.phone_number, a.longitude, a.latitude,
    a.business_scope, a.intended_business_code, a.industry_type_code,if(b.company_code,'1','0' ) as  visitFlag,c.name as intendedBusiness
    from t_company a
    left join   t_manager_company_mark  b   on a.code =b.company_code and  b.manager_code=#{req.managerCode,jdbcType=INTEGER}
    left join  t_business c  on a.intended_business_code =c.code
    left join t_industry_type d on a.industry_type_code=d.code  and  d.level=2
    where a.building_code=#{req.buildingCode,jdbcType=INTEGER}

    <if test="req.industryCode != null and req.industryCode !='' " >
      and d.parent_code =#{req.industryCode,jdbcType=INTEGER}
    </if>
  </select>


  <select id="searchCompany" resultType="com.xspace.ordercenter.rsp.CompanyInfoRsp" >
    select a.id, a.code, a.park_code, a.park_name, a.building_code, a.building_name, a.company_name,
    a.corporation,  a.create_date, a.registered_capital, a.address, a.phone_number, a.longitude, a.latitude,
    a.business_scope, a.intended_business_code, a.industry_type_code,if(b.company_code,'1','0' ) as  visitFlag,c.name as intendedBusiness
    from t_company a
    inner join   t_park d  on  d.code=a.park_code  and  d.manager_code= #{req.managerCode,jdbcType=INTEGER}
    left join   t_manager_company_mark  b   on a.code =b.company_code and  b.manager_code=#{req.managerCode,jdbcType=INTEGER}
    left join  t_business c  on a.intended_business_code =c.code
    <where>
      <if test="req.intendedBusinessCode != null and req.intendedBusinessCode !='' " >
        a.intended_business_code =#{req.intendedBusinessCode,jdbcType=INTEGER}
      </if>
      <if test="req.industryCode != null and req.industryCode !='' " >
        and a.industry_type_code in
        <foreach collection="industryCodes" item="item" index="index"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="req.companyName != null and req.companyName !='' " >
        and a.company_name like concat('%', #{req.companyName,jdbcType=VARCHAR}, '%')
      </if>

      <if test="req.visitFlag != null and req.visitFlag !='' " >
        and if(b.company_code,'1','0') = #{req.visitFlag}
      </if>
    </where>
  </select>

  <select id="findHotCompany" resultType="com.xspace.ordercenter.rsp.CompanyInfoRsp">
    SELECT  a.code ,a.id,  a.park_code, a.park_name, a.building_code, a.building_name, a.company_name,
    a.corporation,  a.create_date, a.registered_capital, a.address, a.phone_number, a.longitude, a.latitude,
    a.business_scope, a.intended_business_code, a.industry_type_code,IF(tm.company_code,'1','0' ) AS  visit_flag,c.name AS intended_business
    FROM  t_company a
    LEFT JOIN (SELECT m.company_code  FROM t_manager_company_mark m WHERE m.manager_code =  #{managerCode,jdbcType=INTEGER} GROUP BY m.company_code) tm
    ON a.code=tm.company_code
    LEFT JOIN  t_business c  ON a.intended_business_code =c.code
    <where>
      <if test="hotCompanyIds!= null">
        AND a.code in <foreach item="item" index="index" collection="hotCompanyIds"
                               open="(" separator="," close=")"> #{item}</foreach>
      </if>

    </where>
    ORDER BY FIELD(a.code,<foreach item="item" index="index" collection="hotCompanyIds"
                                   separator="," > #{item}</foreach>)
  </select>
</mapper>